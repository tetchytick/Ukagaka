//---------------------------The User's Name--------------------------
//This .dic file has to do with setting the user's name and suffix/prefix. You may recall some of the functions mentioned here from bootend.dic. As you can see, you can spread functions across multiple .dic files if you like! Just remember my note in bootend.dic about the different between OnFunction and Function.

//This file is fairly short, so don't worry! It shouldn't take you too long to finish.

//Make sure to read the walkthrough (http://www.ashido.com/ukagaka/walkthrough.html) for more details about how to properly format ghost dialogue!
//I will reiterate that you should be editing these in Notepad++, and in particular, you should set the Language to C (or Java I guess) to properly highlight all the text. It will make things A LOT EASIER for you, trust me! It will also help you keep track of your brackets in case you forget some. If you click on a line with a bracket in Notepad++, it should highlight where the other bracket ends, or turn purple if there's no finishing bracket (which you should definitely fix!)
//It will also highlight my commented lines in green, so you'll know where they are. Any line beginning with // is a commented line that the code will not read. It's just for your reference!


//--OnTeachName
//This is called from the config menu in the main character's double click menu when the user says they want to change their name. If you look in menu.dic you'll see the code leading to here.

OnTeachName	
{
	if reference0 == "TEACHNAME" //ignore this
		{
		"\0\s[0]What do you want me to call you?\n\n\w4\s[19]\_q(Legacy does not currently have any function that uses the user's chosen name, but will in future updates.)\w4\![open,inputbox,OnNameTeach,-1]\e"
		//This is the bit of dialogue you can rewrite if you want. Note that this line ends with \![open,inputbox,OnNameTeach,-1]. You may recognize this from bootend.dic. Essentially, this will lead to the next function. Make sure you don't delete that tag! The rest you can do whatever with though.
		}
	else
		{
		//This else statement is empty, and I'm mostly pointing this out to mention that you can do this too with your if/elses if you want! An empty else will simply cause your ghost not to do anything. I wouldn't get too crazy with this though.
		}
}


//--OnNameTeach
//This is where the user inputs their name and the ghost analyzes it. If you want your ghost to have specific responses to certain names, this is where you would add them. If not, you can erase all the way from the initial if down to the else statement, only leaving from ""\0\s[0]Do you want a title?" to "\![*]\q[-san,titlesan]\e". So it'd look something like

//OnNameTeach
// {
	//tempname = reference0
	
//"\0\s[0]Do you want a title?\w4\n\n[half]\![*]\q[Nope,titlenone]\n"
	//	--
	//	if presuffix == "masculine"
	//	{
	//	"\![*]\q[Mr.,titlemr]\n/
	//	\![*]\q[Master,titlemaster]\n"
	//	}
	//	elseif presuffix == "feminine" 
	//	{
	//	"\![*]\q[Ms.,titlems]\n/
	//	\![*]\q[Lady,titlelady]\n"
	//	}
	//	-- 
	//	"\![*]\q[-ssi,titlessi]\n/
	//	\![*]\q[-san,titlesan]\e"
// }

//If you did so. Otherwise, just fill things the next things as you like.

OnNameTeach
{
	tempname = reference0 //this stores the name value from reference0 in tempname
	reference0 = TOLOWER(reference0) //changes it to lowercase
	reference0 = REPLACE(reference0," ","") //removes spaces
	reference0 = REPLACE(reference0,".","") //removes periods
	reference0 = REPLACE(reference0,"-","") //removes dashes
	
	//Those extra TOLOWER/REPLACE things up there basically clean up the user's input so you don't have to check for Girl, GIRL, girl, GiRl, etc. It'll make it much easier to check for any specific name, since you won't have to account for any edge cases. Note that the names you will be checking for should be in all lowercase, however.
	
	if reference0 == "legacy" //this checks to see if the user input any variation of the name "Girl". You may want to put in a check here if the user tries to name themselves the same name as your characters, since that could be confusing in dialogue. Or just a response to any kind of strange name, like Barack Obama or Cindy Crawford or Mike Nelson or Random Hajile. Or you can prevent certain offensive names if you don't want users using them. Really the power is yours here.
	{
		"\0\s[16]You think you're clever, \s[22]but you're not.\n\w8Try again.\![open,inputbox,OnNameTeach,-1]"
		//Note here that it's using the same tag as above to reopen the text box to let the user put in another name. You can replace the dialogue with whatever as long as you keep the \![open,inputbox,OnNameTeach,-1] tag.
	}
	elseif reference0 == "noctua"
	{
		"\0\s[0]Hey, Noctua. How's the coma?\w4\![open,inputbox,OnNameTeach,-1]"
	}
	elseif reference0 == "vulture"
	{
		"\0\s[14]Wow.\w2 No.\w2 Not allowed.\w4\![open,inputbox,OnNameTeach,-1]"
	}
	elseif reference0 == "bog"
	{
		"\0\s[0]Hey, Bog. Please join Noctua's alliance. \w4\s[15]We are desperate for fire and copious amounts of cake. \w4\![open,inputbox,OnNameTeach,-1]"
	}
	elseif reference0 == "agave"
	{
		"\0\s[0]Hello, Agave. Finished lighting up the desert yet?\w4\![open,inputbox,OnNameTeach,-1]"
	}
	elseif reference0 == "providence"
	{
		"\0\s[0]Hello, Providence. How's the NightWing Palace coming along?\n\w4While we're making small talk, why don't you join Noctua's alliance?\w4\![open,inputbox,OnNameTeach,-1]"
	}
	elseif reference0 == "moss"
	{
		"\0\s[0]Hey, Moss. Please stop producing moss meat and help me convince Bog to join our alliance.\w4\![open,inputbox,OnNameTeach,-1]"
	}
	elseif reference0 == "tetchy"
	{
		"\0\s[6]t for tetchy\![open,inputbox,OnNameTeach,-1]"
	}
	elseif reference0 == "tetchytick"
	{
		"\0\s[6]t for tetchy\![open,inputbox,OnNameTeach,-1]"
	}
	elseif reference0 == "t"
	{
		"\0\s[6]t for tetchy\![open,inputbox,OnNameTeach,-1]"
	}
	elseif reference0 == "dino"
	{
		"\0\s[6]bwaa bwaa bwa bwa bwa\w4\![open,inputbox,OnNameTeach,-1]"
	}
	elseif reference0 == "phen"
	{
		"\0\s[5]HEY PHEN!\w4\![open,inputbox,OnNameTeach,-1]"
	}
	elseif reference0 == "jauari"
	{
		"\0\s[5]HEY JAUARI!\w4\![open,inputbox,OnNameTeach,-1]"
	}
	elseif reference0 == "atlas"
	{
		"\0\s[5]HEY ATLAS! <3\w4\![open,inputbox,OnNameTeach,-1]"
	}
	elseif reference0 == "bengi"
	{
		"\0\s[14]What are you doing here Get voided f"
	}
	elseif reference0 == "" //This is if the user doesn't put in a name at all, since that'd also get awkward in dialogue.
	{
		username = "User" //this sets the user's name to USER.
		
		"\0\s[22]I didn't really want to know anyway.\e"
		//You can change this snip to whatever.
	}
	else //if the user put in something not specified above, ie a proper name the ghost can use. 
	//If you want to remove the title system, what you'd want to do is erase everything in this else statement regarding titles and replace it with something like this.
	//else
	{
	username = tempname
	"\0\s[0]Alright, I'll call you %(username).\e"
	}
	
}

//--NameDone
//This is the final bit of dialogue your ghosts will have when the user changes their name. There is a special section here for when the user first boots the ghost.

NameDone
{
	if firstboot == 1 //this checks for the flag that was set during the firstboot sequence
	{
		firstboot = 0 //this turns the flag off
		
		//This dialogue will display the first time the user puts in their name. You might want to add some closing thoughts to the introduction your ghost had in OnFirstBoot, or directions about how to use the ghost, or something like that. It's up to you!
		"\0\s[0]I didn't ask, but thanks for introducing yourself anyway, %(username). \w4\e"
	}
	else
	{
	"\0\s[0]Alright, I'll call you %(username).\e"
	//Rewrite this as you like. Note the %(username) tag here, as you should be well familiar with by now from the walkthrough and the other .dic files. That will display the name the user just created.
	}	
}
